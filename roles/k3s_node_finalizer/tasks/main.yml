---
- name: Uninstall K3S cluster
  block:
    - name: "Running on: {{ hostname }} with IP: {{ ansible_host }} - Determine K3s uninstall script path"
      ansible.builtin.set_fact:
        k3s_uninstall_script: >-
          {{ '/usr/local/bin/k3s-uninstall.sh' if k3s_role == 'server'
             else '/usr/local/bin/k3s-agent-uninstall.sh' }}

    - name: "Running on: {{ hostname }} with IP: {{ ansible_host }} - Check if K3s uninstall script exists"
      ansible.builtin.stat:
        path: "{{ k3s_uninstall_script }}"
      register: uninstall_script

    - name: "Running on: {{ hostname }} with IP: {{ ansible_host }} - Run K3s uninstall script"
      ansible.builtin.shell: "{{ k3s_uninstall_script }}"
      when: uninstall_script.stat.exists
      become: true

    - name: "Running on: {{ hostname }} with IP: {{ ansible_host }} - Warn if uninstall script is missing"
      ansible.builtin.debug:
        msg: "K3s uninstall script not found at {{ k3s_uninstall_script }}. Skipping finalizer."
      when: not uninstall_script.stat.exists
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o ControlMaster=no -o ControlPersist=no -o ControlPath=none'
    ansible_ssh_private_key_file: /opt/ssh/id_rsa
    ansible_connection: ssh
  become: true
  delegate_to: "{{ ansible_host }}"
